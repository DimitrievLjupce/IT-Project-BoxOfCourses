@model BoxOfCourses.Models.ReviewModel

@{
    ViewBag.Title = "Create";
}
<div class=" container rating-container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-7 container-col-form-heading">
                <h1 class="heading-rate-system" style="padding-left: 100px; color: white; font-weight: 800; font-size: 60px;">How was your <span style="color: #C126EA; ">experience</span>?</h1>

                <div class="form-horizontal">
                    @*<h4>Your opinion matters.</h4>*@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group current-user-container">
                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control CurrentUserBox" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Category, new SelectList(Model.Categories), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Comment, new { rows = "3", cols = "20", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @*@Html.LabelFor(model => model.ReviewValue, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <div class="col-md-10">
                            <div id="stars-container" class="stars">
                                <img id="1" src="~/Content/photos/whiteStar-2.png" onclick="rateStar(1)" onmouseover="starOver(1)" onmouseout="starOut(1)" class="reviewStar" style="width: 30px; height: 30px;">
                                <img id="2" src="~/Content/photos/whiteStar-2.png" onclick="rateStar(2)" onmouseover="starOver(2)" onmouseout="starOut(2)" class="reviewStar" style="width: 30px; height: 30px;">
                                <img id="3" src="~/Content/photos/whiteStar-2.png" onclick="rateStar(3)" onmouseover="starOver(3)" onmouseout="starOut(3)" class="reviewStar" style="width: 30px; height: 30px;">
                                <img id="4" src="~/Content/photos/whiteStar-2.png" onclick="rateStar(4)" onmouseover="starOver(4)" onmouseout="starOut(4)" class="reviewStar" style="width: 30px; height: 30px;">
                                <img id="5" src="~/Content/photos/whiteStar-2.png" onclick="rateStar(5)" onmouseover="starOver(5)" onmouseout="starOut(5)" class="reviewStar" style="width: 30px; height: 30px;">
                            </div>
                            @Html.EditorFor(model => model.ReviewValue, new { htmlAttributes = new { @class = "form-control RateValue" } })
                            @Html.ValidationMessageFor(model => model.ReviewValue, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-offset-2 col-md-10 buttons">
                                @*@Html.ActionLink("Back to List", "Index")*@
                                <a href="~/ReviewModels/Index" class="btn btn-warning" style="width: 120px; color: black;">Back to list</a>
                                <input type="submit" value="Submit" class="btn btn-success" style="color:black; width: 120px;" />
                            </div>
                        </div>
                    </div>

                    <div class="form-group hide">
                        <div class="col-md-offset-2 col-md-10 ">
                            @Html.EditorFor(model => model.CurrentDate, new { htmlAttributes = new { @class = "form-control getDate date-value" } })

                            @Html.ValidationMessageFor(model => model.CurrentDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-5">
                <img class="img-responsive gif-rocket" src="~/Content/photos/3WyW.gif"/>
            </div>
        </div> @*row ends here*@

    }

    
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        @*script for star rating system*@
        $(document).ready(function () {
            var currentUser = '@HttpContext.Current.User.Identity.Name';
            $(".CurrentUserBox").val(currentUser);

        })

        function rateStar(rating) {
            $(".RateValue").val(rating);

            for (var i = 1; i <= 5; i++) {
                $("#" + i).removeClass("StarsColored");
            }

            for (var i = 1; i <= rating; i++) {
                $("#" + i).addClass("StarsColored");
            }
        }

        function starOver(rating) {
            for (var i = 1; i <= rating; i++) {
                $("#" + i).addClass("StarsColoredOver");
            }
        }

        function starOut(rating) {
            for (var i = 1; i <= rating; i++) {
                $("#" + i).removeClass("StarsColoredOver");
            }
        }
        @* ends here - script for star rating system *@

        $(window).on("load", function () {

            var currDate = new Date();
            var year = currDate.getFullYear();

            var month = (1 + currDate.getMonth()).toString();
            month = month.length > 1 ? month : '0' + month;

            var day = currDate.getDate().toString();
            day = day.length > 1 ? day : '0' + day;

            var mins = currDate.getMinutes().toString();
           @* mins = mins.length <= 9 ? '0' + mins : mins;*@
            if (mins <= 9) {
                mins = '0' + mins;
            }
         
           @* var hour = currDate.getHours();
            if (hour == "0") {
                hour = "00";
            }*@

            formatedDate = month + '.' + day + '.' + year + " " + currDate.getHours() + ":" + mins;
            

            console.log(formatedDate)
            $(".getDate").val(formatedDate);
        })

    </script>
}

<style>

    .StarsColored {
        background: url('/Content/photos/yellow-star.png');
        background-repeat: no-repeat;
        background-size: 30px 30px;
    }

    .StarsColoredOver {
        background: url('/Content/photos/yellow-star.png');
        background-repeat: no-repeat;
        background-size: 30px 30px;
    }
    .stars img{
        cursor: pointer;
    }

    .RateValue {
        display: none;
    }

    .rating-container {
        margin-top: 100px;
        margin-bottom: 90px;
    }

    .current-user-container {
        display: none;
    }

    .form-horizontal{
        padding-left: 120px;
        margin-top: 50px;
    }

    .control-label {
        color: #C126EA;
    }

    .form-control {
        background-color: #303b51;
        color: white;
        border: 1px solid #5ABD64;
        font-size: 15px;
    }

    .gif-rocket {
        border: 2px solid #C126EA;
        border-radius: 20px;
        box-shadow: 5px 10px 18px #C126EA;
    }

    .stars {
        text-align: center;
    }

    .buttons {
        padding-left: 35px;
    }
    
</style>