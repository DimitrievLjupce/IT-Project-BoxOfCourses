@model IEnumerable<BoxOfCourses.Models.Course>

@{
    ViewBag.Title = "All Courses";
}

<div class="container-fluid cont-fluid">
    <div class="carousel-container">
        <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">

            <ol class="carousel-indicators">
                <li data-target="#carousel-example-generic" data-slide-to="0" class="active"></li>
                <li data-target="#carousel-example-generic" data-slide-to="1"></li>
                <li data-target="#carousel-example-generic" data-slide-to="2"></li>
                <li data-target="#carousel-example-generic" data-slide-to="3"></li>
                <li data-target="#carousel-example-generic" data-slide-to="4"></li>
            </ol>

            <div class="carousel-inner" role="listbox">
                <div class="item active">
                    <img class="carousel-img img-responsive" src="~/Content/carousel-images/img-3.jpg">
                </div>
                <div class="item ">
                    <img class="carousel-img img-responsive" src="~/Content/carousel-images/img-2.jpg">
                </div>
                <div class="item">
                    <img class="carousel-img img-responsive" src="~/Content/carousel-images/img-4.jpg">
                </div>
                <div class="item">
                    <img class="carousel-img img-responsive" src="~/Content/carousel-images/img-5.jpg">
                </div>
                <div class="item">
                    <img class="carousel-img img-responsive" src="~/Content/carousel-images/img-7.jpg">
                </div>
                <div class="item">
                    <img class="carousel-img img-responsive" src="~/Content/carousel-images/img-8.jpg">
                </div>
            </div>

            <!-- Controls -->
            <a class="left carousel-control" href="#carousel-example-generic" role="button" data-slide="prev">
                <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>

            <a class="right carousel-control" href="#carousel-example-generic" role="button" data-slide="next">
                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
</div>
<div class="container cont">
    <a class="btnn" href="#">
        <div class="heading-container"><h2 class="RecommendedCourses btn__label ">Recommended courses from the <span class="text-green-400">BOX</span></h2></div>
    </a>
    @if (User.IsInRole("Administrator"))
    {
        <p>
            @Html.ActionLink("Create new Course", "Create", "Course", new { @class = "btn btn-success CreateNewCourseButton" })
        </p>
    }
    else
    {
        <p id="hidden-field" style="text-indent: -9999px; margin-bottom: 50px;">hidden-field-text</p>
    }

    <table id="CoursesTable" class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Level)
                </th>
                <th class="text-center">
                    Photo
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="courseNameCoulmn">
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td class="courseCategoryCoulmn">
                        @Html.DisplayFor(modelItem => item.Category)
                    </td>
                    <td id="courseLevelColumn" class="course-level-column">
                        @Html.DisplayFor(modelItem => item.Level, new { @class = "course-level" })
                    </td>
                    <td class="text-center">
                        <img class="image" style="width: 140px; max-width: 150px; max-height: 180px; height: 130px; padding: 5px" src="@Html.DisplayFor(modelItem => item.ImageURL)" />
                    </td>
                    <td class="courseTypeCoulmn">
                        @Html.DisplayFor(modelItem => item.Type, new { @class = "modelType" })
                    </td>
                    <td class="buttons-td">
                        @if (User.IsInRole("Administrator"))
                        {
                           @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-info editcourseButton" }) <span class="vertical-line-between">|</span>
                        }

                        @Html.ActionLink("Take course", "Details", new { id = item.Id }, new { @class = " btn takecourseButton" })

                        @if (User.IsInRole("Administrator"))
                        {
                            <span class="vertical-line-between">|</span> <button data-course-name="@item.Name" data-course-id="@item.Id" class="btn btn-danger js-delete"><i style="margin-left: -10px!important; padding-right: 5px; padding-top: 3px"class="glyphicon glyphicon-trash"></i>Delete</button>
                        }
                        @*<a href="/Courses/Details/@item.Id">Take course 1</a>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        Html.RenderPartial("RecentlyAddedCourses");
    }
</div>

<div class="container-fluid">
    <div class="icon-bar-index-table text-right icon-bar-social-links-index-table">
        <a class="social-links-icons-a icon-instagram" href="https://www.finki.ukim.mk/" target="_blank"><ion-icon class="icon-instagram" name="logo-instagram"></ion-icon></a>
        <a class="social-links-icons-a" href="https://www.finki.ukim.mk/" target="_blank"><ion-icon class="icon-youtube" name="logo-youtube"></ion-icon></a>
        <a class="social-links-icons-a" href="https://www.finki.ukim.mk/" target="_blank"><ion-icon class="icon-twitter" name="logo-twitter"></ion-icon></a>
        <a class="social-links-icons-a" href="https://github.com/DimitrievLjupce" target="_blank"><ion-icon class="icon-github" name="logo-github"></ion-icon></a>
    </div>
</div>

<div> </div>

<style>
  
    .cont {
        padding-top: 20px;
    }

    .carousel-container {
        padding-top: 34px;
    }
    .carousel .carousel-indicators li {
        background-color: #fff;
        background-color: rgba(70,70,70,.25);
    }

    .carousel .carousel-indicators .active {
        background-color: #444;
    }

    .left{
        height: 480px;
    }

    .right {
        height: 480px;
    }

    .carousel-inner {
        height: 500px;
    }
    .carousel-img {
        width: 100%;
        height: 100%!important;
    }

    .cont-fluid {
        padding: 0;
    }

    .h4-black {
        color: black;
        font-size: 30px;
        font-weight: 600
    }

    .p-green {
        color: green;
        font-style: italic;
    }

    .RecommendedCourses {
        color: white;
        font-weight: 700;
        padding: 15px;
        border-radius: 8px;
        font-family: Arial;
        align-content: center;
    }

    th {
        color: #B0B0B0;
        text-transform: uppercase;
        font-size: 11px;
        letter-spacing: 2px;
        text-align: center;
    }

    .courseNameCoulmn {
        color: white;
        font-weight: 700;
        font-size: 20px;
        vertical-align: middle!important;
        max-width: 220px;
        height: 120px;
    }

    .courseCategoryCoulmn {
        color: grey;
        font-size: 15px;
        vertical-align: middle !important;
    }

    .courseTypeCoulmn {
        color: #a8abb3;
        font-size: 15px;
        font-weight: bolder;
        vertical-align: middle !important;
    }

    .course-level-column {
        vertical-align: middle !important;
    }
    .buttons-td{
        vertical-align: middle!important;
    }
    .takecourseButton {
        color: #C126EA;
        font-size: 16px;
        font-weight: 600;
        border: 3px solid #C126EA;
        padding: 15px 25px;
        text-decoration: none;
        font-weight: 500;
    }
        .takecourseButton:hover {
            color: #C126EA;
            text-decoration: none;
            box-shadow: 0 0 5px #C126EA, 0 0 25px #C126EA, 0 0 50px #C126EA, 0 0 200px #C126EA;
            -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);
        }


    .editcourseButton {
        color: black;
        font-size: 15px;
        font-weight: 500;
    }

    .deletecourseButton {
        background-color: #E0634F!important;
        color: black;
        font-size: 15px;
        font-weight: 500;
    }

    .vertical-line-between {
        color: #303641;
        font-size: 25px;
    }

    .text-green-400 {
        color: #5ABD64;
        font-weight: 700;
    }

    .CreateNewCourseButton {
        width: 200px;
        margin-top: 20px;
        margin-bottom: 20px;
        color: black;
    }


    @*od tuka*@

    .btnn:link,
    .btnn:visited {
        position: relative;
        display: flex;
        color: black;
        text-decoration: none;
        background: rgba(255, 255, 255, .05);
        border: 2px solid #C126EA;
        transform: skewX(-20deg);
        transition: .3s all;
    }

    .btnn:hover,
    .btnn:active {
        background: rgba(255, 255, 255, .1);
        cursor: pointer;
    }

    .btnn {
        transform: skewX(20deg);
        margin: auto;
        display: flex;
        align-items: center;
        justify-content: center;
        width: auto;
    }

    /* Electrons */
        .btnn::before,
        .btnn::after {
            content: "";
            position: absolute;
            width: 10px;
            height: 10px;
            background: #5ABD64;
            border-radius: 100%;
            transform: skewX(20deg);
            animation: 4s linear 0s infinite;
            text-align: center;
        }

    .btnn::before {
        top: -6px;
        left: -6px;
        animation-name: electron1;
    }

    .btnn::after {
        left: calc(100% - 4px);
        top: calc(100% - 4px);
        animation-name: electron2;
    }


    /* Hover */
    .btnn:hover::before,
    .btnn:hover::after,
    .btnn:active::before,
    .btnn:active::after {
        animation-play-state: paused;
    }

    .btnn {
        pointer-events: none;
    }

    .btn__label{
        text-align: center;
    }


    @*tuka za social links*@
    .icon-bar-social-links-index-table {
        position: fixed;
        bottom: 30%;
        right: 5%;
        -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    /* Style the icon bar links */
    .icon-bar-index-table ion-icon {
        display: block;
        text-align: center;
        padding: 16px;
        transition: all 0.3s ease;
        font-size: 35px;
        position: relative;
        cursor: pointer;
    }
    .icon-bar-index-table {
        margin-top: 620px;
    }

    .social-links-icons-a {
        color: #6A746B;
    }

    .icon-youtube:hover {
        color: red;
    }

    .icon-instagram:hover {
        color: #E1306C;
    }

    .icon-twitter:hover {
        color: #1DA1F2;
    }

    .icon-github:hover {
        color: black;
    }

    .js-delete {
        width: 70px;
        background-color: #922121;
        font-weight: 600;
    }
    tr:hover{
        background-color: #303641!important;
    }

    tr:nth-child(even) {
        background-color: #171c26;
    }

    .vertical-line-between {
        color: #585d69;
    }
    input[type="search"] {
        background-color: #303b51;
        color: white;
        border: 1px solid #C126EA;
        font-size: 13px!important;
        width: 250px!important;
        font-weight: 300;
    }

    @*style entries info*@
    #CoursesTable_info {
        color: grey;
    }
</style>

@section scripts{
    <script>
        var tempTable;
        $(document).ready(function () {

            var table = $("#CoursesTable").DataTable();
            //checks the searchtext from clicked icon on homepage, and its all about searching the table directly
            var searchText = window.location.search.substring(1);
            if (searchText === "c") {
                searchText = searchText + "#";
            }
            
            if (searchText.length > 0) {
                $(this).scrollTop(330);
            }
            table.search(searchText).draw();
            tempTable = table;

            //placeholder for input type search here, instead of changing in jquery table props.
            $("input[type='search']").attr('placeholder', 'Search stuff.')


        });

        $(window).on("load", function () {
            $.ajax({
                url: "/Courses/RecentlyAddedCourses",
                method: "GET"
            })
        }) 

        //ajax call for deleting specific course from table
        $("#CoursesTable .js-delete").on("click", function () {
            var button = $(this);
            bootbox.confirm({
                message: "Are you sure you want to delete the " + button.attr("data-course-name") + " course?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $.ajax({
                            url: "/Courses/Delete/" + button.attr("data-course-id"),
                            method: "GET",
                            success: function () {
                                tempTable.row(button.parents("tr")).remove().draw();
                            },
                            error: function (err) {
                                console.log(err);
                            }
                        })
                    }
                }
            });
        })
    </script>
}
